{"ast":null,"code":"var _jsxFileName = \"/home/zakharii/Desktop/git/todo-app/src/features/form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createTodoAction } from '../list/listSlice';\nimport { editHeaderAction, editDescriptionAction, addIdAction } from './formSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const list = useSelector(state => state.list);\n  const form = useSelector(state => state.form);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addIdAction(Date.now()));\n  }, [list]);\n\n  const newTask = () => {\n    dispatch(createTodoAction(form));\n    dispatch(editHeaderAction(''));\n    dispatch(editDescriptionAction(''));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: form.header,\n      type: \"text\",\n      onChange: e => dispatch(editHeaderAction(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: form.description,\n      type: \"text\",\n      onChange: e => dispatch(editDescriptionAction(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newTask,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"oggGufqv/VKYPE9ESxeED+XXytA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/zakharii/Desktop/git/todo-app/src/features/form/Form.js"],"names":["useEffect","useSelector","useDispatch","createTodoAction","editHeaderAction","editDescriptionAction","addIdAction","Form","list","state","form","dispatch","Date","now","newTask","header","e","target","value","description"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,EAAkDC,WAAlD,QAAqE,aAArE;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,IAAI,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAxB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,QAAQ,CAACL,WAAW,CAACM,IAAI,CAACC,GAAL,EAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACL,IAAD,CAFM,CAAT;;AAIA,QAAMM,OAAO,GAAG,MAAM;AACpBH,IAAAA,QAAQ,CAACR,gBAAgB,CAACO,IAAD,CAAjB,CAAR;AACAC,IAAAA,QAAQ,CAACP,gBAAgB,CAAC,EAAD,CAAjB,CAAR;AACAO,IAAAA,QAAQ,CAACN,qBAAqB,CAAC,EAAD,CAAtB,CAAR;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEK,IAAI,CAACK,MAAnB;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAuC,MAAA,QAAQ,EAAGC,CAAD,IAAOL,QAAQ,CAACP,gBAAgB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,KAAK,EAAER,IAAI,CAACS,WAAtB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAA+C,MAAA,QAAQ,EAAGH,CAAD,IAAOL,QAAQ,CAACN,qBAAqB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB;AAAxE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvBQP,I;UAEMN,W,EACAA,W,EACIC,W;;;KAJVK,I;AAyBT,eAAeA,IAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createTodoAction } from '../list/listSlice';\nimport { editHeaderAction, editDescriptionAction, addIdAction } from './formSlice';\n\nfunction Form() {\n\n  const list = useSelector(state => state.list);\n  const form = useSelector(state => state.form);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(addIdAction(Date.now()))\n  }, [list])\n\n  const newTask = () => {\n    dispatch(createTodoAction(form));\n    dispatch(editHeaderAction(''));\n    dispatch(editDescriptionAction(''));\n  };\n\n  return (\n    <div className=\"Form\">\n      <input value={form.header} type='text' onChange={(e) => dispatch(editHeaderAction(e.target.value))} />\n      <textarea value={form.description} type='text' onChange={(e) => dispatch(editDescriptionAction(e.target.value))} />\n      <button onClick={newTask}>Create Task</button>\n    </div>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}